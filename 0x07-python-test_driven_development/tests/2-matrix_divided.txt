>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 8)
[[0.12, 0.25, 0.38], [0.5, 0.62, 0.75]]
>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 0)
Traceback (most recent call last):
ZeroDivisionError: division by zero
>>> matrix_divided([[1, 2, 3], [4, 5, 6]], "hi")
Traceback (most recent call last):
TypeError: div must be a number
>>> matrix_divided([[1, 2, 3], [4, 5, 6, 34]], 10)
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size
>>> matrix_divided([43, 12, 89, 12], 48)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix_divided([43, 12, 89, "hello"], 23)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix_divided([], 60)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix_divided(None, 45)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix_divided([[], [], []], 78)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix_divided(24)
Traceback (most recent call last):
TypeError: matrix_divided() missing 1 required positional argument: 'div'
>>> matrix_divided()
Traceback (most recent call last):
TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'
>>> matrix_divided([[1, 2, 3], [4, 5, 6]], float("inf"))