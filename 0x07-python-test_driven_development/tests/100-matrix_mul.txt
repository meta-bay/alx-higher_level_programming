>>> matrix_mul = __import__('100-matrix_mul').matrix_mul

>>> (matrix_mul([[45, 10], [32, 41]], [[4, 9], [1, 3]]))
[[190, 435], [169, 411]]

>>> (matrix_mul([[-4.0, -35.0]], [[-90], [-12.0]]))
[[780.0]]

>>> (matrix_mul([[20, 8], [4, 20]], []))
Traceback (most recent call last):
ValueError: m_b can't be empty

>>> (matrix_mul([], [[1, 3], [2, 4]]))
Traceback (most recent call last):
ValueError: m_a can't be empty

>>> (matrix_mul([[1, 2, 3], [4, 5, 6]], [[]]))
Traceback (most recent call last):
ValueError: m_b can't be empty

>>> (matrix_mul([[1, 2, 4], [3, 5, 6, 7]], [[1, 2, 3], [3, 4, 5]]))
Traceback (most recent call last):
TypeError: each row of m_a must be of the same size

>>> (matrix_mul([[1, 2, 3], [4, 5, 6]], [[1, 2, 3], [4, 5, 6, 8]]))
Traceback (most recent call last):
TypeError: each row of m_b must be of the same size

>>> (matrix_mul([["hello", "guys"]], [[1, 2], [3, 4]]))
Traceback (most recent call last):
TypeError: m_a should contain only integers or floats

>>> (matrix_mul("hello", [[1, 2], [3, 4]]))
Traceback (most recent call last):
TypeError: m_a must be a list

>>> (matrix_mul([[1, 2], [3, 4]], "guys"))
Traceback (most recent call last):
TypeError: m_b must be a list

>>> (matrix_mul([1, 2, 3], [[1, 2], [3, 4]]))
Traceback (most recent call last):
TypeError: m_a must be a list of lists

>>> (matrix_mul([[1, 2], [3, 4]], [1, 2, 3]))
Traceback (most recent call last):
TypeError: m_b must be a list of lists

>>> (matrix_mul([[1, 2], [3, 4]]))
Traceback (most recent call last):
TypeError: matrix_mul() missing 1 required positional argument: 'm_b'

>>> (matrix_mul())
Traceback (most recent call last):
TypeError: matrix_mul() missing 2 required positional arguments: 'm_a' and 'm_b'

>>> matrix_mul([[1, 2], [3, 4]], [[5, 7], [8, 9], [10, 11]])
Traceback (most recent call last):
ValueError: m_a and m_b can't be multiplied